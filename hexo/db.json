{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1748507396620},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"6497b70356271fd6f9f1dc862353be844c457a53","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"06889bee30e4c39479467021da434d3a6a0990fc","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"a93d7b3990e45bc7247eecf01888f71674887a63","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"57281fc3812c877ec2d8e89ec87ede57b9789d4c","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"97160b8111dd0283f8231408bcab4c87d31c1646","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"1b89d0caba03a66a43d9c290a5e94fa438a89210","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"e9d4678e14be5e3cd5e34d783e5af6d6626092f5","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"0039146b8ccbdf9b9f8bee58fc6c238f0e9921fc","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"0e94f5722d4c44d3cc91be2f4fd30b9ab503b868","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"f608400a08cf137ab15ec1f44bac551950afe879","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1748503605935},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1748503605935},{"_id":"source/_posts/My-Fist-Post.md","hash":"e006afd231eb1152482794b06b67cfb236ed00bc","modified":1748702432369},{"_id":"source/_posts/使用-Next-js-和-Hexo-来搭建我的博客.md","hash":"fc0b3bba5b027de2bcd63e69a1fe47a67c076a00","modified":1748712740472}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-05-29T08:29:56.620Z","updated":"2025-05-29T08:29:56.620Z","comments":1,"layout":"post","photos":[],"_id":"cmb9463q30000jtwobwqn99u3","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"使用 Next.js 和 Hexo 来搭建我的博客","date":"2025-05-31T15:03:39.000Z","cover":"https://i.miji.bid/2025/05/31/b32120e45a883f469219fff4665c9b29.png","excerpt":"工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前苏卡卡曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用Next.js + Hexo 重构我的博客]。所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)","_content":"\n工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前[苏卡卡](https://blog.skk.moe/)曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用 Next.js + Hexo 重构我的博客\n](https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/)。\n\n所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)\n\n## Step 1: 初始化\n\n首先安装 [Hexo](https://hexo.io/zh-cn/)和[Next.js](https://nextjs.org/)，具体安装过程请参考官网。我的想法是 hexo 项目应该位于 next.js 项目之中，相当于是一个模块。安装完成之后项目结构是这样的（Next.js: 15.3.2, Hexo: 7.3.0）：\n\n```bash\n├── hexo\n│   ├── _config.landscape.yml\n│   ├── _config.yml\n│   ├── db.json\n│   ├── package-lock.json\n│   ├── package.json\n│   ├── scaffolds\n│   │   ├── draft.md\n│   │   ├── page.md\n│   │   └── post.md\n│   ├── source\n│   │   └── _posts\n│   │       ├── 使用-Next-js-和-Hexo-来搭建我的博客.md\n│   │       └── hello-world.md\n│   └── themes\n├── LICENSE\n├── next-env.d.ts\n├── next.config.mjs\n├── package-lock.json\n├── package.json\n├── src\n│   └── app\n│       ├── layout.tsx\n│       └── page.tsx\n└── tsconfig.json\n```\n\n安装完成之后第一步就是在 Next.js 项目中引入 Hexo，所以：\n\n```base\nnpm install hexo -D\n```\n\n随后尝试在`page.tsx`中引入 Hexo 打印一下我们目前所有的文章：\n\n```typescript\n// src/utils/hexo.ts 以后我们有关于 hexo 的所有函数都会放在这里\nimport Hexo from 'hexo'\nimport path from 'path'\n\n// 单例\nlet hexo: Hexo | null = null\n\nexport const initHexo = async () => {\n  if (hexo) {\n    return hexo\n  }\n\n  const hexoRoot = path.join(process.cwd(), '/hexo')\n  const hexoInstance = new Hexo(hexoRoot, { silent: true })\n\n  await hexoInstance.init()\n  await hexoInstance.load()\n\n  hexo = hexoInstance\n  return hexo\n}\n```\n\n```typescript\n// src/app/page.tsx\nimport { initHexo } from '~/utils/hexo'\n\nconst Page = async () => {\n  const hexo = await initHexo()\n  hexo.locals.get('posts').forEach((post) => {\n    console.log(post)\n  })\n\n  return <div>This is Home Page</div>\n}\n\nexport default Page\n```\n\n随后，`npm run dev`。嗯嗯，结果不出意外地出意外了，报错：\n\n```bash\n➜  my-hexo git:(main) ✗ npm run dev\n\n> my-hexo@1.0.0 dev\n> next dev\n\n   ▲ Next.js 15.3.2\n   - Local:        http://localhost:3000\n   - Network:      http://192.168.10.42:3000\n\n ✓ Starting...\n ✓ Ready in 1497ms\n ○ Compiling / ...\n ⨯ ./node_modules/fsevents/fsevents.node\nModule parse failed: Unexpected character '�' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n(Source code omitted for this binary file)\n\nImport trace for requested module:\n./node_modules/fsevents/fsevents.node\n./node_modules/fsevents/fsevents.js\n./node_modules/chokidar/lib/fsevents-handler.js\n./node_modules/chokidar/index.js\n./node_modules/hexo-fs/dist/fs.js\n./node_modules/hexo/dist/hexo/index.js\n./src/utils/hexo.ts\n./src/app/page.tsx\n ⨯ ./node_modules/fsevents/fsevents.node\n```\n\n很明显可以看到是因为 hexo 包内的某些原因引起的奇怪错误，而且定位到了一个 `node` 后缀的文件。对于这种错误，一般我们首先把这个包排除我们的构建，搜了一下 next.js 的文档，新建了个配置文件：\n\n```typescript\n// next.config.mjs\n/** @type { import('next').NextConfig } */\n\nconst nextConfig = {\n  // 让 next 在构建的时候忽略 hexo\n  serverExternalPackages: ['hexo'],\n}\n\nexport default nextConfig\n```\n\n嗯，问题解决了，有点出乎意料的顺利，嘿嘿 😊。接下来我们开始构建我们博客的首页，首先首页应该有一个分页列表列出最近的文档，每一个列表项最基础应该有四个元素：封面、标题、摘要和创建日期。在 hexo 中新建文章的时候我们可以发现，hexo 默认提供文章的标题和创建日期，但是封面和摘要需要我们进一步解决。对于这种查查文档就能解决的问题，为什么我们不问问神奇的 AI 呢？AI 告诉我们可以在每篇博文的 Markdown 文件顶部的 Front-matter 区域添加自定义字段来解决这个问题，虽然没有自动化，但是不失于一种最初的解决办法。\n\n```bash\n---\ntitle: 使用 Next.js 和 Hexo 来搭建我的博客\ndate: 2025-05-31 23:03:39\ntags:\n// add\ncover: https://i.miji.bid/2025/05/31/b32120e45a883f469219fff4665c9b29.png\nexcerpt: 工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前苏卡卡曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用Next.js + Hexo 重构我的博客]。所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)\n---\n```\n\n再次回到控制台发现 AI 老师没有骗我们，确实获取到了数据。随后我们需要获取最新的 10 篇文章展示在我们的首页，重复以上操作，我们可以编写一个工具函数来帮我们获取指定页码的文章，并重构我们的 `hexo.ts`：\n\n```typescript\n// src/utils/hexo.ts\nimport Hexo from 'hexo'\nimport path from 'path'\n\nclass MyHexo {\n  hexo: Hexo | null = null\n\n  constructor() {\n    this.initHexo()\n  }\n\n  initHexo = async () => {\n    if (this.hexo) {\n      return\n    }\n\n    const hexoRoot = path.join(process.cwd(), '/hexo')\n    const hexoInstance = new Hexo(hexoRoot, { silent: true })\n\n    await hexoInstance.init()\n    await hexoInstance.load()\n\n    this.hexo = hexoInstance\n  }\n\n  getPagedPosts = async (options?: { page: number; pageSize: number }) => {\n    await this.initHexo()\n\n    const [page, pageSize] = options ? [options.page, options.pageSize] : [1, 10]\n    const allPosts = this.hexo.locals.get('posts').sort('-date')\n    const totalPosts = allPosts.length\n    const totalPages = Math.ceil(totalPosts / pageSize)\n    const skipCount = (page - 1) * pageSize\n    const pagedPosts = allPosts.skip(skipCount).limit(pageSize).toArray()\n\n    return {\n      // 为什么要做一个 map，首先我只想保留对我有用的东西，其次，直接使用 pagedPosts 会有循环引用的警告，逃...\n      posts: pagedPosts.map((post) => ({\n        title: post.title,\n        date: post.date.toISOString(),\n        excerpt: post.excerpt || '',\n        cover: post.cover || '',\n      })),\n      totalPages,\n      totalPosts,\n    }\n  }\n}\n\nexport const hexo = new MyHexo()\n```\n\nOK，到这一步我们可以真正地开始构建我们的 UI 了，我比较喜欢 TailwindCSS，接下来我们引入 TailwindCSS，具体怎么做请参考[官方指引](https://nextjs.org/docs/app/guides/tailwind-css)。\n","source":"_posts/使用-Next-js-和-Hexo-来搭建我的博客.md","raw":"---\ntitle: 使用 Next.js 和 Hexo 来搭建我的博客\ndate: 2025-05-31 23:03:39\ntags:\ncover: https://i.miji.bid/2025/05/31/b32120e45a883f469219fff4665c9b29.png\nexcerpt: 工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前苏卡卡曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用Next.js + Hexo 重构我的博客]。所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)\n---\n\n工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前[苏卡卡](https://blog.skk.moe/)曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用 Next.js + Hexo 重构我的博客\n](https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/)。\n\n所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)\n\n## Step 1: 初始化\n\n首先安装 [Hexo](https://hexo.io/zh-cn/)和[Next.js](https://nextjs.org/)，具体安装过程请参考官网。我的想法是 hexo 项目应该位于 next.js 项目之中，相当于是一个模块。安装完成之后项目结构是这样的（Next.js: 15.3.2, Hexo: 7.3.0）：\n\n```bash\n├── hexo\n│   ├── _config.landscape.yml\n│   ├── _config.yml\n│   ├── db.json\n│   ├── package-lock.json\n│   ├── package.json\n│   ├── scaffolds\n│   │   ├── draft.md\n│   │   ├── page.md\n│   │   └── post.md\n│   ├── source\n│   │   └── _posts\n│   │       ├── 使用-Next-js-和-Hexo-来搭建我的博客.md\n│   │       └── hello-world.md\n│   └── themes\n├── LICENSE\n├── next-env.d.ts\n├── next.config.mjs\n├── package-lock.json\n├── package.json\n├── src\n│   └── app\n│       ├── layout.tsx\n│       └── page.tsx\n└── tsconfig.json\n```\n\n安装完成之后第一步就是在 Next.js 项目中引入 Hexo，所以：\n\n```base\nnpm install hexo -D\n```\n\n随后尝试在`page.tsx`中引入 Hexo 打印一下我们目前所有的文章：\n\n```typescript\n// src/utils/hexo.ts 以后我们有关于 hexo 的所有函数都会放在这里\nimport Hexo from 'hexo'\nimport path from 'path'\n\n// 单例\nlet hexo: Hexo | null = null\n\nexport const initHexo = async () => {\n  if (hexo) {\n    return hexo\n  }\n\n  const hexoRoot = path.join(process.cwd(), '/hexo')\n  const hexoInstance = new Hexo(hexoRoot, { silent: true })\n\n  await hexoInstance.init()\n  await hexoInstance.load()\n\n  hexo = hexoInstance\n  return hexo\n}\n```\n\n```typescript\n// src/app/page.tsx\nimport { initHexo } from '~/utils/hexo'\n\nconst Page = async () => {\n  const hexo = await initHexo()\n  hexo.locals.get('posts').forEach((post) => {\n    console.log(post)\n  })\n\n  return <div>This is Home Page</div>\n}\n\nexport default Page\n```\n\n随后，`npm run dev`。嗯嗯，结果不出意外地出意外了，报错：\n\n```bash\n➜  my-hexo git:(main) ✗ npm run dev\n\n> my-hexo@1.0.0 dev\n> next dev\n\n   ▲ Next.js 15.3.2\n   - Local:        http://localhost:3000\n   - Network:      http://192.168.10.42:3000\n\n ✓ Starting...\n ✓ Ready in 1497ms\n ○ Compiling / ...\n ⨯ ./node_modules/fsevents/fsevents.node\nModule parse failed: Unexpected character '�' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n(Source code omitted for this binary file)\n\nImport trace for requested module:\n./node_modules/fsevents/fsevents.node\n./node_modules/fsevents/fsevents.js\n./node_modules/chokidar/lib/fsevents-handler.js\n./node_modules/chokidar/index.js\n./node_modules/hexo-fs/dist/fs.js\n./node_modules/hexo/dist/hexo/index.js\n./src/utils/hexo.ts\n./src/app/page.tsx\n ⨯ ./node_modules/fsevents/fsevents.node\n```\n\n很明显可以看到是因为 hexo 包内的某些原因引起的奇怪错误，而且定位到了一个 `node` 后缀的文件。对于这种错误，一般我们首先把这个包排除我们的构建，搜了一下 next.js 的文档，新建了个配置文件：\n\n```typescript\n// next.config.mjs\n/** @type { import('next').NextConfig } */\n\nconst nextConfig = {\n  // 让 next 在构建的时候忽略 hexo\n  serverExternalPackages: ['hexo'],\n}\n\nexport default nextConfig\n```\n\n嗯，问题解决了，有点出乎意料的顺利，嘿嘿 😊。接下来我们开始构建我们博客的首页，首先首页应该有一个分页列表列出最近的文档，每一个列表项最基础应该有四个元素：封面、标题、摘要和创建日期。在 hexo 中新建文章的时候我们可以发现，hexo 默认提供文章的标题和创建日期，但是封面和摘要需要我们进一步解决。对于这种查查文档就能解决的问题，为什么我们不问问神奇的 AI 呢？AI 告诉我们可以在每篇博文的 Markdown 文件顶部的 Front-matter 区域添加自定义字段来解决这个问题，虽然没有自动化，但是不失于一种最初的解决办法。\n\n```bash\n---\ntitle: 使用 Next.js 和 Hexo 来搭建我的博客\ndate: 2025-05-31 23:03:39\ntags:\n// add\ncover: https://i.miji.bid/2025/05/31/b32120e45a883f469219fff4665c9b29.png\nexcerpt: 工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前苏卡卡曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用Next.js + Hexo 重构我的博客]。所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)\n---\n```\n\n再次回到控制台发现 AI 老师没有骗我们，确实获取到了数据。随后我们需要获取最新的 10 篇文章展示在我们的首页，重复以上操作，我们可以编写一个工具函数来帮我们获取指定页码的文章，并重构我们的 `hexo.ts`：\n\n```typescript\n// src/utils/hexo.ts\nimport Hexo from 'hexo'\nimport path from 'path'\n\nclass MyHexo {\n  hexo: Hexo | null = null\n\n  constructor() {\n    this.initHexo()\n  }\n\n  initHexo = async () => {\n    if (this.hexo) {\n      return\n    }\n\n    const hexoRoot = path.join(process.cwd(), '/hexo')\n    const hexoInstance = new Hexo(hexoRoot, { silent: true })\n\n    await hexoInstance.init()\n    await hexoInstance.load()\n\n    this.hexo = hexoInstance\n  }\n\n  getPagedPosts = async (options?: { page: number; pageSize: number }) => {\n    await this.initHexo()\n\n    const [page, pageSize] = options ? [options.page, options.pageSize] : [1, 10]\n    const allPosts = this.hexo.locals.get('posts').sort('-date')\n    const totalPosts = allPosts.length\n    const totalPages = Math.ceil(totalPosts / pageSize)\n    const skipCount = (page - 1) * pageSize\n    const pagedPosts = allPosts.skip(skipCount).limit(pageSize).toArray()\n\n    return {\n      // 为什么要做一个 map，首先我只想保留对我有用的东西，其次，直接使用 pagedPosts 会有循环引用的警告，逃...\n      posts: pagedPosts.map((post) => ({\n        title: post.title,\n        date: post.date.toISOString(),\n        excerpt: post.excerpt || '',\n        cover: post.cover || '',\n      })),\n      totalPages,\n      totalPosts,\n    }\n  }\n}\n\nexport const hexo = new MyHexo()\n```\n\nOK，到这一步我们可以真正地开始构建我们的 UI 了，我比较喜欢 TailwindCSS，接下来我们引入 TailwindCSS，具体怎么做请参考[官方指引](https://nextjs.org/docs/app/guides/tailwind-css)。\n","slug":"使用-Next-js-和-Hexo-来搭建我的博客","published":1,"updated":"2025-05-31T17:32:20.472Z","_id":"cmbcde93y00007cwo9c7m0e58","comments":1,"layout":"post","photos":[],"content":"<p>工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前<a href=\"https://blog.skk.moe/\">苏卡卡</a>曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的<a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">使用 Next.js + Hexo 重构我的博客\n</a>。</p>\n<p>所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)</p>\n<h2 id=\"Step-1-初始化\"><a href=\"#Step-1-初始化\" class=\"headerlink\" title=\"Step 1: 初始化\"></a>Step 1: 初始化</h2><p>首先安装 <a href=\"https://hexo.io/zh-cn/\">Hexo</a>和<a href=\"https://nextjs.org/\">Next.js</a>，具体安装过程请参考官网。我的想法是 hexo 项目应该位于 next.js 项目之中，相当于是一个模块。安装完成之后项目结构是这样的（Next.js: 15.3.2, Hexo: 7.3.0）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── hexo</span><br><span class=\"line\">│   ├── _config.landscape.yml</span><br><span class=\"line\">│   ├── _config.yml</span><br><span class=\"line\">│   ├── db.json</span><br><span class=\"line\">│   ├── package-lock.json</span><br><span class=\"line\">│   ├── package.json</span><br><span class=\"line\">│   ├── scaffolds</span><br><span class=\"line\">│   │   ├── draft.md</span><br><span class=\"line\">│   │   ├── page.md</span><br><span class=\"line\">│   │   └── post.md</span><br><span class=\"line\">│   ├── <span class=\"built_in\">source</span></span><br><span class=\"line\">│   │   └── _posts</span><br><span class=\"line\">│   │       ├── 使用-Next-js-和-Hexo-来搭建我的博客.md</span><br><span class=\"line\">│   │       └── hello-world.md</span><br><span class=\"line\">│   └── themes</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── next-env.d.ts</span><br><span class=\"line\">├── next.config.mjs</span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   └── app</span><br><span class=\"line\">│       ├── layout.tsx</span><br><span class=\"line\">│       └── page.tsx</span><br><span class=\"line\">└── tsconfig.json</span><br></pre></td></tr></table></figure>\n\n<p>安装完成之后第一步就是在 Next.js 项目中引入 Hexo，所以：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -D</span><br></pre></td></tr></table></figure>\n\n<p>随后尝试在<code>page.tsx</code>中引入 Hexo 打印一下我们目前所有的文章：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/utils/hexo.ts 以后我们有关于 hexo 的所有函数都会放在这里</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Hexo</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;hexo&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&#x27;path&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单例</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">hexo</span>: <span class=\"title class_\">Hexo</span> | <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">initHexo</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (hexo) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> hexo</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> hexoRoot = path.<span class=\"title function_\">join</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&#x27;/hexo&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hexoInstance = <span class=\"keyword\">new</span> <span class=\"title class_\">Hexo</span>(hexoRoot, &#123; <span class=\"attr\">silent</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">init</span>()</span><br><span class=\"line\">  <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">load</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">  hexo = hexoInstance</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/app/page.tsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initHexo &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;~/utils/hexo&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Page</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hexo = <span class=\"keyword\">await</span> <span class=\"title function_\">initHexo</span>()</span><br><span class=\"line\">  hexo.<span class=\"property\">locals</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;posts&#x27;</span>).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">post</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(post)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>This is Home Page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Page</span></span><br></pre></td></tr></table></figure>\n\n<p>随后，<code>npm run dev</code>。嗯嗯，结果不出意外地出意外了，报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  my-hexo git:(main) ✗ npm run dev</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; my-hexo@1.0.0 dev</span><br><span class=\"line\">&gt; next dev</span><br><span class=\"line\"></span><br><span class=\"line\">   ▲ Next.js 15.3.2</span><br><span class=\"line\">   - Local:        http://localhost:3000</span><br><span class=\"line\">   - Network:      http://192.168.10.42:3000</span><br><span class=\"line\"></span><br><span class=\"line\"> ✓ Starting...</span><br><span class=\"line\"> ✓ Ready <span class=\"keyword\">in</span> 1497ms</span><br><span class=\"line\"> ○ Compiling / ...</span><br><span class=\"line\"> ⨯ ./node_modules/fsevents/fsevents.node</span><br><span class=\"line\">Module parse failed: Unexpected character <span class=\"string\">&#x27;�&#x27;</span> (1:0)</span><br><span class=\"line\">You may need an appropriate loader to handle this file <span class=\"built_in\">type</span>, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders</span><br><span class=\"line\">(Source code omitted <span class=\"keyword\">for</span> this binary file)</span><br><span class=\"line\"></span><br><span class=\"line\">Import trace <span class=\"keyword\">for</span> requested module:</span><br><span class=\"line\">./node_modules/fsevents/fsevents.node</span><br><span class=\"line\">./node_modules/fsevents/fsevents.js</span><br><span class=\"line\">./node_modules/chokidar/lib/fsevents-handler.js</span><br><span class=\"line\">./node_modules/chokidar/index.js</span><br><span class=\"line\">./node_modules/hexo-fs/dist/fs.js</span><br><span class=\"line\">./node_modules/hexo/dist/hexo/index.js</span><br><span class=\"line\">./src/utils/hexo.ts</span><br><span class=\"line\">./src/app/page.tsx</span><br><span class=\"line\"> ⨯ ./node_modules/fsevents/fsevents.node</span><br></pre></td></tr></table></figure>\n\n<p>很明显可以看到是因为 hexo 包内的某些原因引起的奇怪错误，而且定位到了一个 <code>node</code> 后缀的文件。对于这种错误，一般我们首先把这个包排除我们的构建，搜了一下 next.js 的文档，新建了个配置文件：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// next.config.mjs</span></span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type</span> &#123;<span class=\"type\"> import(&#x27;next&#x27;).NextConfig </span>&#125; */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> nextConfig = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 让 next 在构建的时候忽略 hexo</span></span><br><span class=\"line\">  <span class=\"attr\">serverExternalPackages</span>: [<span class=\"string\">&#x27;hexo&#x27;</span>],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> nextConfig</span><br></pre></td></tr></table></figure>\n\n<p>嗯，问题解决了，有点出乎意料的顺利，嘿嘿 😊。接下来我们开始构建我们博客的首页，首先首页应该有一个分页列表列出最近的文档，每一个列表项最基础应该有四个元素：封面、标题、摘要和创建日期。在 hexo 中新建文章的时候我们可以发现，hexo 默认提供文章的标题和创建日期，但是封面和摘要需要我们进一步解决。对于这种查查文档就能解决的问题，为什么我们不问问神奇的 AI 呢？AI 告诉我们可以在每篇博文的 Markdown 文件顶部的 Front-matter 区域添加自定义字段来解决这个问题，虽然没有自动化，但是不失于一种最初的解决办法。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 使用 Next.js 和 Hexo 来搭建我的博客</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2025-05-31 23:03:39</span><br><span class=\"line\">tags:</span><br><span class=\"line\">// add</span><br><span class=\"line\">cover: https://i.miji.bid/2025/05/31/b32120e45a883f469219fff4665c9b29.png</span><br><span class=\"line\">excerpt: 工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前苏卡卡曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用Next.js + Hexo 重构我的博客]。所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>再次回到控制台发现 AI 老师没有骗我们，确实获取到了数据。随后我们需要获取最新的 10 篇文章展示在我们的首页，重复以上操作，我们可以编写一个工具函数来帮我们获取指定页码的文章，并重构我们的 <code>hexo.ts</code>：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/utils/hexo.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Hexo</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;hexo&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&#x27;path&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyHexo</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">hexo</span>: <span class=\"title class_\">Hexo</span> | <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">initHexo</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  initHexo = <span class=\"title function_\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">hexo</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> hexoRoot = path.<span class=\"title function_\">join</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&#x27;/hexo&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> hexoInstance = <span class=\"keyword\">new</span> <span class=\"title class_\">Hexo</span>(hexoRoot, &#123; <span class=\"attr\">silent</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">init</span>()</span><br><span class=\"line\">    <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">load</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">hexo</span> = hexoInstance</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getPagedPosts = <span class=\"title function_\">async</span> (<span class=\"attr\">options</span>?: &#123; <span class=\"attr\">page</span>: <span class=\"built_in\">number</span>; <span class=\"attr\">pageSize</span>: <span class=\"built_in\">number</span> &#125;) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">initHexo</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> [page, pageSize] = options ? [options.<span class=\"property\">page</span>, options.<span class=\"property\">pageSize</span>] : [<span class=\"number\">1</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> allPosts = <span class=\"variable language_\">this</span>.<span class=\"property\">hexo</span>.<span class=\"property\">locals</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;posts&#x27;</span>).<span class=\"title function_\">sort</span>(<span class=\"string\">&#x27;-date&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalPosts = allPosts.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalPages = <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(totalPosts / pageSize)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> skipCount = (page - <span class=\"number\">1</span>) * pageSize</span><br><span class=\"line\">    <span class=\"keyword\">const</span> pagedPosts = allPosts.<span class=\"title function_\">skip</span>(skipCount).<span class=\"title function_\">limit</span>(pageSize).<span class=\"title function_\">toArray</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 为什么要做一个 map，首先我只想保留对我有用的东西，其次，直接使用 pagedPosts 会有循环引用的警告，逃...</span></span><br><span class=\"line\">      <span class=\"attr\">posts</span>: pagedPosts.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">post</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"attr\">date</span>: post.<span class=\"property\">date</span>.<span class=\"title function_\">toISOString</span>(),</span><br><span class=\"line\">        <span class=\"attr\">excerpt</span>: post.<span class=\"property\">excerpt</span> || <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">cover</span>: post.<span class=\"property\">cover</span> || <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      &#125;)),</span><br><span class=\"line\">      totalPages,</span><br><span class=\"line\">      totalPosts,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> hexo = <span class=\"keyword\">new</span> <span class=\"title class_\">MyHexo</span>()</span><br></pre></td></tr></table></figure>\n\n<p>OK，到这一步我们可以真正地开始构建我们的 UI 了，我比较喜欢 TailwindCSS，接下来我们引入 TailwindCSS，具体怎么做请参考<a href=\"https://nextjs.org/docs/app/guides/tailwind-css\">官方指引</a>。</p>\n","more":"<p>工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前<a href=\"https://blog.skk.moe/\">苏卡卡</a>曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的<a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">使用 Next.js + Hexo 重构我的博客\n</a>。</p>\n<p>所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)</p>\n<h2 id=\"Step-1-初始化\"><a href=\"#Step-1-初始化\" class=\"headerlink\" title=\"Step 1: 初始化\"></a>Step 1: 初始化</h2><p>首先安装 <a href=\"https://hexo.io/zh-cn/\">Hexo</a>和<a href=\"https://nextjs.org/\">Next.js</a>，具体安装过程请参考官网。我的想法是 hexo 项目应该位于 next.js 项目之中，相当于是一个模块。安装完成之后项目结构是这样的（Next.js: 15.3.2, Hexo: 7.3.0）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── hexo</span><br><span class=\"line\">│   ├── _config.landscape.yml</span><br><span class=\"line\">│   ├── _config.yml</span><br><span class=\"line\">│   ├── db.json</span><br><span class=\"line\">│   ├── package-lock.json</span><br><span class=\"line\">│   ├── package.json</span><br><span class=\"line\">│   ├── scaffolds</span><br><span class=\"line\">│   │   ├── draft.md</span><br><span class=\"line\">│   │   ├── page.md</span><br><span class=\"line\">│   │   └── post.md</span><br><span class=\"line\">│   ├── <span class=\"built_in\">source</span></span><br><span class=\"line\">│   │   └── _posts</span><br><span class=\"line\">│   │       ├── 使用-Next-js-和-Hexo-来搭建我的博客.md</span><br><span class=\"line\">│   │       └── hello-world.md</span><br><span class=\"line\">│   └── themes</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── next-env.d.ts</span><br><span class=\"line\">├── next.config.mjs</span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── src</span><br><span class=\"line\">│   └── app</span><br><span class=\"line\">│       ├── layout.tsx</span><br><span class=\"line\">│       └── page.tsx</span><br><span class=\"line\">└── tsconfig.json</span><br></pre></td></tr></table></figure>\n\n<p>安装完成之后第一步就是在 Next.js 项目中引入 Hexo，所以：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -D</span><br></pre></td></tr></table></figure>\n\n<p>随后尝试在<code>page.tsx</code>中引入 Hexo 打印一下我们目前所有的文章：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/utils/hexo.ts 以后我们有关于 hexo 的所有函数都会放在这里</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Hexo</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;hexo&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&#x27;path&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 单例</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">hexo</span>: <span class=\"title class_\">Hexo</span> | <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">initHexo</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (hexo) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> hexo</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> hexoRoot = path.<span class=\"title function_\">join</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&#x27;/hexo&#x27;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hexoInstance = <span class=\"keyword\">new</span> <span class=\"title class_\">Hexo</span>(hexoRoot, &#123; <span class=\"attr\">silent</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">init</span>()</span><br><span class=\"line\">  <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">load</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">  hexo = hexoInstance</span><br><span class=\"line\">  <span class=\"keyword\">return</span> hexo</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/app/page.tsx</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initHexo &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;~/utils/hexo&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">Page</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> hexo = <span class=\"keyword\">await</span> <span class=\"title function_\">initHexo</span>()</span><br><span class=\"line\">  hexo.<span class=\"property\">locals</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;posts&#x27;</span>).<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">post</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(post)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>This is Home Page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Page</span></span><br></pre></td></tr></table></figure>\n\n<p>随后，<code>npm run dev</code>。嗯嗯，结果不出意外地出意外了，报错：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  my-hexo git:(main) ✗ npm run dev</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; my-hexo@1.0.0 dev</span><br><span class=\"line\">&gt; next dev</span><br><span class=\"line\"></span><br><span class=\"line\">   ▲ Next.js 15.3.2</span><br><span class=\"line\">   - Local:        http://localhost:3000</span><br><span class=\"line\">   - Network:      http://192.168.10.42:3000</span><br><span class=\"line\"></span><br><span class=\"line\"> ✓ Starting...</span><br><span class=\"line\"> ✓ Ready <span class=\"keyword\">in</span> 1497ms</span><br><span class=\"line\"> ○ Compiling / ...</span><br><span class=\"line\"> ⨯ ./node_modules/fsevents/fsevents.node</span><br><span class=\"line\">Module parse failed: Unexpected character <span class=\"string\">&#x27;�&#x27;</span> (1:0)</span><br><span class=\"line\">You may need an appropriate loader to handle this file <span class=\"built_in\">type</span>, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders</span><br><span class=\"line\">(Source code omitted <span class=\"keyword\">for</span> this binary file)</span><br><span class=\"line\"></span><br><span class=\"line\">Import trace <span class=\"keyword\">for</span> requested module:</span><br><span class=\"line\">./node_modules/fsevents/fsevents.node</span><br><span class=\"line\">./node_modules/fsevents/fsevents.js</span><br><span class=\"line\">./node_modules/chokidar/lib/fsevents-handler.js</span><br><span class=\"line\">./node_modules/chokidar/index.js</span><br><span class=\"line\">./node_modules/hexo-fs/dist/fs.js</span><br><span class=\"line\">./node_modules/hexo/dist/hexo/index.js</span><br><span class=\"line\">./src/utils/hexo.ts</span><br><span class=\"line\">./src/app/page.tsx</span><br><span class=\"line\"> ⨯ ./node_modules/fsevents/fsevents.node</span><br></pre></td></tr></table></figure>\n\n<p>很明显可以看到是因为 hexo 包内的某些原因引起的奇怪错误，而且定位到了一个 <code>node</code> 后缀的文件。对于这种错误，一般我们首先把这个包排除我们的构建，搜了一下 next.js 的文档，新建了个配置文件：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// next.config.mjs</span></span><br><span class=\"line\"><span class=\"comment\">/** <span class=\"doctag\">@type</span> &#123;<span class=\"type\"> import(&#x27;next&#x27;).NextConfig </span>&#125; */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> nextConfig = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 让 next 在构建的时候忽略 hexo</span></span><br><span class=\"line\">  <span class=\"attr\">serverExternalPackages</span>: [<span class=\"string\">&#x27;hexo&#x27;</span>],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> nextConfig</span><br></pre></td></tr></table></figure>\n\n<p>嗯，问题解决了，有点出乎意料的顺利，嘿嘿 😊。接下来我们开始构建我们博客的首页，首先首页应该有一个分页列表列出最近的文档，每一个列表项最基础应该有四个元素：封面、标题、摘要和创建日期。在 hexo 中新建文章的时候我们可以发现，hexo 默认提供文章的标题和创建日期，但是封面和摘要需要我们进一步解决。对于这种查查文档就能解决的问题，为什么我们不问问神奇的 AI 呢？AI 告诉我们可以在每篇博文的 Markdown 文件顶部的 Front-matter 区域添加自定义字段来解决这个问题，虽然没有自动化，但是不失于一种最初的解决办法。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 使用 Next.js 和 Hexo 来搭建我的博客</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2025-05-31 23:03:39</span><br><span class=\"line\">tags:</span><br><span class=\"line\">// add</span><br><span class=\"line\">cover: https://i.miji.bid/2025/05/31/b32120e45a883f469219fff4665c9b29.png</span><br><span class=\"line\">excerpt: 工作了许久一直都没有搭建一个自己的博客，这几天不为何心血来潮突然就做了决定，想到之前苏卡卡曾经使用 Next.js 重构了他原本基于 Hexo 的博客，于是我也打算照猫画虎使用相同大致相同的技术栈来搭建我自己的博客，本文参考了苏卡卡的[使用Next.js + Hexo 重构我的博客]。所以让我们开始吧！(WARNING：本文会相当流水账，因为我是在开发这个项目的同时在写这篇文章，因此文章进度和项目进度会是同步的)</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p>再次回到控制台发现 AI 老师没有骗我们，确实获取到了数据。随后我们需要获取最新的 10 篇文章展示在我们的首页，重复以上操作，我们可以编写一个工具函数来帮我们获取指定页码的文章，并重构我们的 <code>hexo.ts</code>：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// src/utils/hexo.ts</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Hexo</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;hexo&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> path <span class=\"keyword\">from</span> <span class=\"string\">&#x27;path&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyHexo</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">hexo</span>: <span class=\"title class_\">Hexo</span> | <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">initHexo</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  initHexo = <span class=\"title function_\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">hexo</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> hexoRoot = path.<span class=\"title function_\">join</span>(process.<span class=\"title function_\">cwd</span>(), <span class=\"string\">&#x27;/hexo&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> hexoInstance = <span class=\"keyword\">new</span> <span class=\"title class_\">Hexo</span>(hexoRoot, &#123; <span class=\"attr\">silent</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">init</span>()</span><br><span class=\"line\">    <span class=\"keyword\">await</span> hexoInstance.<span class=\"title function_\">load</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">hexo</span> = hexoInstance</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  getPagedPosts = <span class=\"title function_\">async</span> (<span class=\"attr\">options</span>?: &#123; <span class=\"attr\">page</span>: <span class=\"built_in\">number</span>; <span class=\"attr\">pageSize</span>: <span class=\"built_in\">number</span> &#125;) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">initHexo</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> [page, pageSize] = options ? [options.<span class=\"property\">page</span>, options.<span class=\"property\">pageSize</span>] : [<span class=\"number\">1</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> allPosts = <span class=\"variable language_\">this</span>.<span class=\"property\">hexo</span>.<span class=\"property\">locals</span>.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;posts&#x27;</span>).<span class=\"title function_\">sort</span>(<span class=\"string\">&#x27;-date&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalPosts = allPosts.<span class=\"property\">length</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> totalPages = <span class=\"title class_\">Math</span>.<span class=\"title function_\">ceil</span>(totalPosts / pageSize)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> skipCount = (page - <span class=\"number\">1</span>) * pageSize</span><br><span class=\"line\">    <span class=\"keyword\">const</span> pagedPosts = allPosts.<span class=\"title function_\">skip</span>(skipCount).<span class=\"title function_\">limit</span>(pageSize).<span class=\"title function_\">toArray</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 为什么要做一个 map，首先我只想保留对我有用的东西，其次，直接使用 pagedPosts 会有循环引用的警告，逃...</span></span><br><span class=\"line\">      <span class=\"attr\">posts</span>: pagedPosts.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">post</span>) =&gt;</span> (&#123;</span><br><span class=\"line\">        <span class=\"attr\">title</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"attr\">date</span>: post.<span class=\"property\">date</span>.<span class=\"title function_\">toISOString</span>(),</span><br><span class=\"line\">        <span class=\"attr\">excerpt</span>: post.<span class=\"property\">excerpt</span> || <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">cover</span>: post.<span class=\"property\">cover</span> || <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      &#125;)),</span><br><span class=\"line\">      totalPages,</span><br><span class=\"line\">      totalPosts,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> hexo = <span class=\"keyword\">new</span> <span class=\"title class_\">MyHexo</span>()</span><br></pre></td></tr></table></figure>\n\n<p>OK，到这一步我们可以真正地开始构建我们的 UI 了，我比较喜欢 TailwindCSS，接下来我们引入 TailwindCSS，具体怎么做请参考<a href=\"https://nextjs.org/docs/app/guides/tailwind-css\">官方指引</a>。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}